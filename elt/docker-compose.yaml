version: '2'

#Mentioining the services. These services follow in the order they have been listed

services:

#This initializes the source postgres database

  source_postgres:
    image: postgres:15
    ports:
      - "5434:5432"
    networks:
      - elt_network
    environment:
      POSTGRES_DB: ${PG_SDB}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
    volumes:
      - ./source_db_init/init.sql:/docker-entrypoint-initdb.d/init.sql 

#This initializes the destination database

  destination_postgres:
    image: postgres:15
    ports:
      - "5435:5432"
    networks:
      - elt_network
    environment:
      POSTGRES_DB: ${PG_DDB}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
    
#This script dumps the database from the source to the destination.

  elt_script:
    build:
      context: ./elt_script
      dockerfile: Dockerfile
    command: ["python", "elt_script.py"]
    networks:
      - elt_network
    depends_on:
      - source_postgres
      - destination_postgres
    environment:
      PG_SDB: source_db
      PG_DDB: destination_db
      PG_USER: postgres
      PG_PASSWORD: ${PG_PASSWORD}
      PG_SHOST: source_postgres
      PG_DHOST: destination_postgres
  
#dbt is used to change the source database in the order we want to and dump that into the destination database.

  dbt:
    image: ghcr.io/dbt-labs/dbt-postgres:1.8.2
    command: 
      [
        "run",
        "--profiles-dir",
        "/root",
        "--project-dir",
        "/dbt"
      ]
    networks:
      - elt_network
    volumes:
      - ./Custom_postgres:/dbt
      - ~/.dbt:/root
    depends_on:
      elt_script:
        condition: service_completed_successfully
    environment:
      DBT_PROFILE: default
      DBT_TARGET: dev


#Networks are defined here

networks:
  elt_network:
    driver: bridge